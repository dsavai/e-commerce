
<?php
##
## This program takes 3 arguments from the command line:
## 1. Store id
## 2. api token
## 3. order id
##
## Example php -q TestPreAuth.php store1 yesguy
##
require "mpgClasses.php";

function sanitize($value) {
    return htmlspecialchars(trim($value));
}

$price        = isset($_POST['price']) ? sanitize($_POST['price']) : '';
$country      = isset($_POST['country']) ? sanitize($_POST['country']) : '';
$phone_number = isset($_POST['phone_number']) ? sanitize($_POST['phone_number']) : '';
$email        = isset($_POST['email']) ? sanitize($_POST['email']) : '';
$first_name   = isset($_POST['first_name']) ? sanitize($_POST['first_name']) : '';
$last_name    = isset($_POST['last_name']) ? sanitize($_POST['last_name']) : '';
$expiry       = isset($_POST['expiry']) ? sanitize($_POST['expiry']) : '';
$cvv          = isset($_POST['cvv']) ? sanitize($_POST['cvv']) : '';
$card_number          = isset($_POST['card_number']) ? sanitize($_POST['card_number']) : '';

if (preg_match('/^\d{2}\/\d{2}$/', $expiry)) {
    list($mm, $yy) = explode('/', $expiry);
    $expiry_date = $yy . $mm;  // Convert to YYMM
} else {
    // Optional: fallback if format is incorrect
    $expiry_date = '0000';
}

// $store_id='store5';
// $api_token="yesguy";
$store_id='gwca085702';
$api_token="kO5dTuoA3ODVyEmF6xvZ";
/************************* Transactional Variables ****************************/
$type='preauth';
$cust_id='cust id';
$order_id='ord-'.date("dmy-G:i:s");
// $amount=$price;
$amount=$price;
$pan=$card_number;
//$expiry_date='2011';
$crypt='7';
$status_check = 'false';
//Optional - Set for Multi-Currency only
//$amount must be 0.00 when using multi-currency
$mcp_amount = '500'; //penny value amount 1.25 = 125
$mcp_currency_code = '840'; //ISO-4217 country currency number
$txnArray=array('type'=>$type,
    'order_id'=>$order_id,
    'cust_id'=>$cust_id,
    'amount'=>$amount,
    'pan'=>$pan,
    'expdate'=>$expiry_date,
    'crypt_type'=>$crypt,
    //'wallet_indicator' => '' //Refer to documentation for details
    //,'mcp_amount' => $mcp_amount,
    //'mcp_currency_code' => $mcp_currency_code
    //,'cm_id' => '8nAK8712sGaAkls56' //set only for usage with Offlinx - Unique max 50 alphanumeric characters transaction id generated by merchant
);
$mpgTxn = new mpgTransaction($txnArray);
/******************* Credential on File **********************************/
$cof = new CofInfo();
$cof->setPaymentIndicator("U");
$cof->setPaymentInformation("2");
$cof->setIssuerId("168451306048014");
$mpgTxn->setCofInfo($cof);
$mpgRequest = new mpgRequest($mpgTxn);
$mpgRequest->setProcCountryCode("CA"); //"US" for sending transaction to US environment
$mpgRequest->setTestMode(true); //false or comment out this line for production transactions
$mpgHttpPost  =new mpgHttpsPost($store_id,$api_token,$mpgRequest);
$mpgResponse=$mpgHttpPost->getMpgResponse();
// echo '<pre>';
// print_r($mpgResponse);
// exit;

if ($mpgResponse->responseData['Complete'])
{
    header('Location: success.php');
}
else {
    header('Location: error.php');
}


print("\nCardType = " . $mpgResponse->getCardType());
print("\nTransAmount = " . $mpgResponse->getTransAmount());
print("\nTxnNumber = " . $mpgResponse->getTxnNumber());
print("\nReceiptId = " . $mpgResponse->getReceiptId());
print("\nTransType = " . $mpgResponse->getTransType());
print("\nReferenceNum = " . $mpgResponse->getReferenceNum());
print("\nResponseCode = " . $mpgResponse->getResponseCode());
print("\nISO = " . $mpgResponse->getISO());
print("\nMessage = " . $mpgResponse->getMessage());
print("\nIsVisaDebit = " . $mpgResponse->getIsVisaDebit());
print("\nAuthCode = " . $mpgResponse->getAuthCode());
print("\nComplete = " . $mpgResponse->getComplete());
print("\nTransDate = " . $mpgResponse->getTransDate());
print("\nTransTime = " . $mpgResponse->getTransTime());
print("\nTicket = " . $mpgResponse->getTicket());
print("\nTimedOut = " . $mpgResponse->getTimedOut());
print("\nIssuerId = " . $mpgResponse->getIssuerId());
print("\nMCPAmount = " . $mpgResponse->getMCPAmount());
print("\nMCPCurrenyCode = " . $mpgResponse->getMCPCurrencyCode());
?>
